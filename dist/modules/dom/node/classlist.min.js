/*!
* LiftJS Javascript Library v0.2.6
* http://liftjs.github.io/
*
* Copyright 2013 - 2015 Pneumatic Web Technologies Corp. and other contributors
* Released under the MIT license
* http://liftjs.github.io/license
*/



define(function(){"use strict";function a(a,b){this.name=a,this.code=DOMException[a],this.message=b}function b(b){function c(b){if(""===b)throw new a("SYNTAX_ERR","An invalid or illegal string was specified");if(/\s/.test(b))throw new a("INVALID_CHARACTER_ERR","String contains an invalid character");return g.call(e,b)}function d(){b.setAttribute("class",h.toString())}var e=f.call(b.getAttribute("class")||"").split(/\s+/),h=this;this.item=function(a){return e[a]||null},this.contains=function(a){return-1!==c(a+"")},this.add=function(){var a=0,b=!1,f=arguments.length;do{var g=arguments[a];-1===c(g)&&(e.push(g+""),b=!0)}while(++a<f);b&&d()},this.remove=function(){var a=0,b=!1,f=arguments.length;do{var g=c(arguments[a]);-1!==g&&(e.splice(g,1),b=!0)}while(++a<f);b&&d()},this.toggle=function(a,b){a+="";var c=h.contains(a),d=c?b!==!0&&"remove":b!==!1&&"add";return d&&h[d](a),!c},this.toString=function(){return e.join(" ")}}function c(){if(!(this instanceof Element))throw new TypeError("'classList' getter called on an object that does not implement interface Element.");return new b(this)}var d=document.createElement("div");d.innerHTML="<svg></svg>";var e=d.firstChild;if("classList"in d&&e&&"classList"in e)return!1;var f=String.prototype.trim||function(){return this.replace(/^\s+|\s+$/g,"")},g=Array.prototype.indexOf||function(a){for(var b=0;b<this.length;b++)if(b in this&&this[b]===a)return b;return-1};a.prototype=Error.prototype;var h=Element.prototype;if(Object.defineProperty){var i={get:c,enumerable:!0,configurable:!0};try{Object.defineProperty(h,"classList",i)}catch(j){-2146823252===j.number&&(i.enumerable=!1,Object.defineProperty(h,"classList",i))}}else Object.prototype.__defineGetter__&&h.__defineGetter__("classList",c);return!0});
//# sourceMappingURL=classlist.min.js.map